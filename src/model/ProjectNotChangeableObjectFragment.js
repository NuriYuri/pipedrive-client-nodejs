/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectNotChangeableObjectFragment model module.
 * @module model/ProjectNotChangeableObjectFragment
 * @version 1.0.0
 */
class ProjectNotChangeableObjectFragment {
    /**
     * Constructs a new <code>ProjectNotChangeableObjectFragment</code>.
     * @alias module:model/ProjectNotChangeableObjectFragment
     */
    constructor() { 
        
        ProjectNotChangeableObjectFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectNotChangeableObjectFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectNotChangeableObjectFragment} obj Optional instance to populate.
     * @return {module:model/ProjectNotChangeableObjectFragment} The populated <code>ProjectNotChangeableObjectFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectNotChangeableObjectFragment();

            if (data.hasOwnProperty('add_time')) {
                obj['add_time'] = ApiClient.convertToType(data['add_time'], 'String');

                delete data['add_time'];
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'String');

                delete data['update_time'];
            }
            if (data.hasOwnProperty('status_change_time')) {
                obj['status_change_time'] = ApiClient.convertToType(data['status_change_time'], 'String');

                delete data['status_change_time'];
            }
            if (data.hasOwnProperty('archive_time')) {
                obj['archive_time'] = ApiClient.convertToType(data['archive_time'], 'String');

                delete data['archive_time'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * The creation date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */
ProjectNotChangeableObjectFragment.prototype['add_time'] = undefined;

/**
 * The update date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */
ProjectNotChangeableObjectFragment.prototype['update_time'] = undefined;

/**
 * The status changed date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} status_change_time
 */
ProjectNotChangeableObjectFragment.prototype['status_change_time'] = undefined;

/**
 * The archived date and time of the project in UTC. Format: YYYY-MM-DD HH:MM:SS. If not archived then 'null'.
 * @member {String} archive_time
 */
ProjectNotChangeableObjectFragment.prototype['archive_time'] = undefined;






export default ProjectNotChangeableObjectFragment;

