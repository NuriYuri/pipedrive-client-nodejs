/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectPlanItemObject model module.
 * @module model/ProjectPlanItemObject
 * @version 1.0.0
 */
class ProjectPlanItemObject {
    /**
     * Constructs a new <code>ProjectPlanItemObject</code>.
     * @alias module:model/ProjectPlanItemObject
     */
    constructor() { 
        
        ProjectPlanItemObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectPlanItemObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectPlanItemObject} obj Optional instance to populate.
     * @return {module:model/ProjectPlanItemObject} The populated <code>ProjectPlanItemObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectPlanItemObject();

            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'Number');

                delete data['item_id'];
            }
            if (data.hasOwnProperty('item_type')) {
                obj['item_type'] = ApiClient.convertToType(data['item_type'], 'String');

                delete data['item_type'];
            }
            if (data.hasOwnProperty('phase_id')) {
                obj['phase_id'] = ApiClient.convertToType(data['phase_id'], 'Number');

                delete data['phase_id'];
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');

                delete data['group_id'];
            }

            if (Object.keys(data).length > 0) {
                Object.assign(obj, data);
            }

        }
        return obj;
    }


}

/**
 * ID of plan item (either activity or task ID)
 * @member {Number} item_id
 */
ProjectPlanItemObject.prototype['item_id'] = undefined;

/**
 * Type of a plan item (task / activity)
 * @member {String} item_type
 */
ProjectPlanItemObject.prototype['item_type'] = undefined;

/**
 * The ID of the board this project is associated with. If null then plan item is not in any phase.
 * @member {Number} phase_id
 */
ProjectPlanItemObject.prototype['phase_id'] = undefined;

/**
 * The ID of the board this project is associated with. If null then plan item is not in any group.
 * @member {Number} group_id
 */
ProjectPlanItemObject.prototype['group_id'] = undefined;






export default ProjectPlanItemObject;

